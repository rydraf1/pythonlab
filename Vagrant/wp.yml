---
- hosts: wp
  become: true

   
  
  tasks:

        
    
    - name: “Installing pymysql for dependency”
      pip:
        name: pymysql
        state: present
    
    
    
    
    - name: Ensure prerequisites are present
      yum:
        name:
          - nginx
          - php 
          - php-fpm 
          - php-curl 
          - php-gd 
          - php-intl 
          - php-mbstring 
          - php-soap 
          - php-xml 
          - php-xmlrpc 
          - php-zip 
          - mysql-server
          - php-mysqlnd
        state: present
      notify: Restart Mysql

  
    - name: enable php-fpm
      service:
        name: php-fpm
        enabled: yes
    
    # - name: Disable default pool
    #   command: mv /etc/php-fpm.d/www.conf /etc/php-fpm.d/www.disabled 
    #   notify: restart php-fpm


  #  - name: Replace nginx html folder
  #     ansible.builtin.lineinfile:
  #       path: /etc/nginx/nginx.conf
  #       regexp: '^root         /usr/share/nginx/html'
  #       line: root   /var/www/html/wpsite.com  ;
  #     notify: Restart nginx
    


    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: /Ansible/wpsite.com.conf
        dest: /etc/php-fpm.d/wpsite.com.conf
        


    - name: Create wpsite Database
      mysql_db:
        name: WPSITE
        state: present
        # login_unix_socket: /var/lib/mysql/mysql.sock
        

    - name: Create database local user with name 'admin' with all database privileges
      mysql_user:
        name: admin
        password: Test@1234
        priv: '*.*:ALL,GRANT'
        state: present
        # login_unix_socket: /var/lib/mysql/mysql.sock
      # notify: Restart Mysql


    - name: Creates directory - /var/www/html/wpsite.com
      file:
        path: /var/www/html/wpsite.com
        state: directory
    
    - name: shell copy
      shell: cp -r /Ansible/wordpress/* /var/www/html/wpsite.com
             
      become: yes

             

    
    - name: Add group "wordpress"
      group: name=wordpress gid=1010

    - name: Add user "wordpress"
      user: 
        name: wordpress 
        group: wordpress 
        home: /var/www/html/wpsite.com/ 
        uid: 1010

    - name: Change ownership of WordPress installation
      file: 
        path: /var/www/html/wpsite.com 
        owner: wordpress 
        group: wordpress 
        state: directory 
        recurse: yes 
        mode: 0755

    - name: Ensure files have 644 permissions
      command: chdir=/var find . -type f -exec chmod -R 0644 {} \;
      
   
    - name: Creating a wp config file (wpsite.com.conf) wp with content
      copy:
        dest: /etc/nginx/conf.d/wpsite.com.conf

        content: |
          server {
          listen       80 default_server;
          server_name  wp;
          root /var/www/html/wpsite.com  ;
  
          client_max_body_size 64M;
  
          # Deny access to any files with a .php extension in the uploads directory
          location ~* /(?:uploads|files)/.*\.php$ {
                  deny all;
          }
  
          location / {
                  index index.php index.html index.htm;
                  try_files $uri $uri/ /index.php?$args;}
  
          location ~* \.(gif|jpg|jpeg|png|css|js)$ {
                  expires max;}
  
          location ~ \.php$ {
                  try_files $uri =404;
                  fastcgi_split_path_info ^(.+\.php)(/.+)$;
                  fastcgi_index index.php;
                  fastcgi_pass  unix:/var/run/php-fpm/wordpress.sock;
                  fastcgi_param   SCRIPT_FILENAME
                                  $document_root$fastcgi_script_name;
                  include       fastcgi_params; }}
          
          
    - name: insert firewalld rule for port 80
      firewalld: port=80/tcp permanent=true state=enabled immediate=yes
      ignore_errors: yes

    - name: insert firewalld rule for port 3306
      firewalld: port=3306/tcp permanent=true state=enabled immediate=yes
      ignore_errors: yes

  
  

      
        

    
      
      
  











  handlers:
    - name: Restart Mysql
      service:
        name: mysqld
        state: restarted

    - name: Restart nginx
      service:
        name: nginx
        state: restarted

    - name: restart php-fpm
      service:
        name: php-fpm
        state: restarted

    

    